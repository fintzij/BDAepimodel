% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_epimodel.R
\name{simulate_epimodel}
\alias{simulate_epimodel}
\title{Simulates a stochastic epidemic model.}
\usage{
simulate_epimodel(epimodel, obstimes = NULL, init_state = NULL,
  meas_vars = NULL, r_meas_process = NULL, return_config = TRUE,
  trim = TRUE, lump = TRUE)
}
\arguments{
\item{epimodel}{list of bookkeeping and model objects.}

\item{meas_vars}{character vector specifying which compartments are measured.}

\item{r_meas_process}{function to simulate from the measurement process, with
named arguments \code{state}, \code{meas_vars}, and \code{params}, which
are the current state of the process (given as a named character vector
with element names corresponding exactly to the names of compartments), a
vector with the names of the states to be measured, and a named vector of
process parameters. The function should return noisy measurements of the
process in a vector with named elements corresponding to each of the
measured compartments specified in \code{meas_vars}. The function must
index into the state vector and parameter vector using element names.}

\item{return_config}{option specifying whether to return a matrix of
subject-level trajectories. Defaults to \code{TRUE}.}

\item{trim}{option specifying whether to trim the simulated data if the
epidemic ends before the final observation time. Defaults to \code{TRUE}.}

\item{lump}{option specifying whether to simulate the next event directly on
the extended state space of individuals, or to simulate on the lumped state
space of compartment counts, and then choose a subject uniformly at random
for each event from the set of subjects in the risk pool for that event. A
value of TRUE, corresponding to the lumped state space, is appropriate when
there is no subject level heterogeneity and is significantly faster in even
moderate sized populations.}
}
\value{
Data frame with columns for the observation times, and draws from the
  measurement process at observation times. Optionally, also return a data
  frame with columns for event times and states of the epidemic compartments
  at each event time.
}
\description{
Simulate a realization from a stochastic epidemic model along with a dataset
resulting from a specified measurement process. The (latent) population
trajectory for the epidemic is simulated using Gillespie's first reaction
method (Gillespie 1976, 1977), with the trajectory optionally being returned
in the output. The dataset that is returned consists of observations of the
epidemic that are distributed according to a measurement process, provided as
a function by the user. The dynamics of the system are characterized by a
named vector of flow rates between compartments and a numeric matrix that
specifies the changes to each compartment due to each type of event. The user
also specifies a named vector of process parameters, a named vector of
initial states, and a set of times at which the epidemic process is sampled.
The syntax for calling the function is deliberately similar to that used in
the 'GillespieSSA' package so as to facilitate ease of use for users familiar
with that package.
}
\examples{
# Set up initialization funtion and measurement process function

r_initdist <- function(params) {
                           sample.int(3, 1, prob = c(1-params["rho"], params["rho"], 0))
                           }

r_meas_process <- function(state, meas_vars, params){
                           obs_vec <- rbinom(n = nrow(state), size = state[,meas_vars], prob = params["rho"])
                           names(obs_vec) <- meas_vars
                           return(obs_vec)
                           }

# initialize epimodel
epimodel <- init_epimodel(obstimes = seq(0, 10, by = 0.05),
                          states = c("S", "I", "R"),
                          params = c(beta = 0.02, mu = 1, gamma = 0.5, rho = 0.5, p0 = 0.05),
                          rates = c("beta * I", "mu", "gamma"),
                          flow = matrix(c(-1, 1, 0, 0, -1, 1, 1, 0, -1), ncol = 3, byrow = T),
                          meas_vars = "I",
                          r_meas_process = r_meas_process,
                          popsize = 200,
                          r_initdist = r_initdist)

# simulate from model
epimodel <- simulate_epimodel(epimodel)

}
\references{
{Gillespie DT (1976). “A general method for numerically
  simulating the stochastic time evolution of coupled chemical reactions.”
  Journal of Computational Physics, *22*(4), pp. 403-434.

  Gillespie DT (1977). “Exact stochastic simulation of coupled chemical
  reactions.” The Journal of Physical Chemistry, *81*(25), pp. 2340- 2361.}
}

